import React from "react";
import Head from "next/head";
import EmojiRain from "@/components/emoji/EmojiRain";
import { Button } from "@/components/ui/button";
import { useQuery } from "@tanstack/react-query";
import { useRouter } from "next/router";
import axios from "axios";
import { env } from "@/env";
import Image from "next/image";

interface RoastData {
  roast: string;
}

export default function Home() {
  const router = useRouter();
  const [threadID, setThreadID] = React.useState<string>("");
  const [name, setName] = React.useState<string>("");
  const [leftRight, setLeftRight] = React.useState(false);

  const { data, refetch } = useQuery<RoastData>({
    queryKey: ["roast"],
    queryFn: () => {
      return axios
        .get<RoastData>(
          `${env.NEXT_PUBLIC_BACKEND_URL}/roast/${threadID}?name=${name}`,
        )
        .then((res) => res.data);
    },
    enabled: threadID !== "" && name !== "",
  });

  React.useEffect(() => {
    const nameFromQuery = router.query.name as string;
    const idFromQuery = router.query.id as string;

    setThreadID(idFromQuery);
    setName(nameFromQuery);
  }, [router]);

  React.useEffect(() => {
    console.log(threadID);
    console.log(name);
  }, [threadID, name]);

  return (
    <>
      <Head>
        <title>ROAST ME</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <EmojiRain
          emojis={["ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡", "ðŸ¤¡"]}
        />
        {leftRight ? (
          <div className="container flex flex-row items-center justify-center gap-12 px-4 py-16 ">
            <Image src={"/face1.png"} width={400} height={600} alt="" />
            <div className="speech-bubble relative rounded-lg border-2 p-6 text-8xl text-gray-400">
              {data?.roast ?? `${name}, you are smelly`}
            </div>
          </div>
        ) : (
          <div className="container flex flex-row items-center justify-center gap-12 px-4 py-16 ">
            <div className="speech-bubble relative rounded-lg border-2 p-6 text-8xl text-gray-400">
              {data?.roast ?? `${name}, you are smelly`}
            </div>
            <Image
              className="scale-x-[-1]"
              src={"/face1.png"}
              width={400}
              height={600}
              alt=""
            />
          </div>
        )}
        <Button
          className="bg-transparent p-9 text-center text-3xl text-gray-400 hover:bg-gray-700 hover:bg-opacity-35 hover:text-gray-400"
          variant={"outline"}
          onClick={() => {
            console.log("refetch");
            setLeftRight((prev) => !prev);
            refetch();
          }}
        >
          Roast Me Again
        </Button>
      </main>
    </>
  );
}
